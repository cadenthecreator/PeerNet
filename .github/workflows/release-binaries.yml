name: Build Binaries

on:
  release:
    types: 
      - created

jobs:
  build_for_mac_arm:
    name: MacOSArm
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: brew install gdk-pixbuf pango gtk+3 atkmm
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Rename binary
        run: mv target/release/PeerNet PeerNet-macos-arm64
      - name: Upload to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./PeerNet-macos-arm64
          asset_name: PeerNet-macos-arm64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  build_for_mac:
    name: MacOS
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: brew install gdk-pixbuf pango gtk+3 atkmm
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Rename binary
        run: mv target/release/PeerNet PeerNet-macos64
      - name: Upload to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./PeerNet-macos64
          asset_name: PeerNet-macos64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  build_for_linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y gdk-pixbuf2.0-dev libpango1.0-dev libatk1.0-dev libgtk-3-dev
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Rename binary
        run: mv target/release/PeerNet PeerNet-linux-amd64
      - name: Upload to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./PeerNet-linux-amd64
          asset_name: PeerNet-linux-amd64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  build_for_windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install MinGW and dependencies
        run: |
            choco install mingw
            curl -L http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/pkg-config_0.26-1_win32.zip -o pkg-config_0.26-1_win32.zip
            unzip pkg-config_0.26-1_win32.zip -d C:\MinGW
            curl -L http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/gettext-runtime_0.18.1.1-2_win32.zip -o gettext-runtime_0.18.1.1-2_win32.zip
            unzip gettext-runtime_0.18.1.1-2_win32.zip -d C:\MinGW
            curl -L http://ftp.gnome.org/pub/gnome/binaries/win32/glib/2.28/glib_2.28.8-1_win32.zip -o glib_2.28.8-1_win32.zip
            unzip glib_2.28.8-1_win32.zip -d C:\MinGW
            ls
            copy C:\MinGW\pkg-config_0.26-1_win32\bin\pkg-config.exe C:\MinGW\bin
            copy C:\MinGW\gettext-runtime_0.18.1.1-2_win32\bin\intl.dll C:\MinGW\bin
            copy C:\MinGW\glib_2.28.8-1_win32\bin\libglib-2.0-0.dll C:\MinGW\bin
      - name: Add MSYS2 to PATH
        run: echo "C:\msys64\mingw64\bin" >> $env:GITHUB_PATH
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable-x86_64-pc-windows-msvc
          override: true
      - uses: actions-rs/cargo@v1
        env:
          PKG_CONFIG_SYSROOT_DIR: /
          PKG_CONFIG_PATH: /mingw64/lib/pkgconfig
        with:
          command: build
          args: --release
      - name: Rename binary
        run: Rename-Item target\release\PeerNet.exe PeerNet-windows.exe
      - name: Upload to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./PeerNet-windows.exe
          asset_name: PeerNet-windows.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
